//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="PnpAntPolicialSoap11Binding", Namespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/")]
public partial class PnpAntPolicial : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback consultarAntecedenteCodPerOperationCompleted;
    
    private System.Threading.SendOrPostCallback consultarPersonaNomPatOperationCompleted;
    
    private System.Threading.SendOrPostCallback consultarPersonaNroDocOperationCompleted;
    
    private System.Threading.SendOrPostCallback consultarPersonaNomPatMatOperationCompleted;
    
    /// <remarks/>
    public PnpAntPolicial() {
        this.Url = "https://ws3.pide.gob.pe/services/PnpAntPolicial.PnpAntPolicialHttpsSoap11Endpoint" +
            "";
    }
    
    /// <remarks/>
    public event consultarAntecedenteCodPerCompletedEventHandler consultarAntecedenteCodPerCompleted;
    
    /// <remarks/>
    public event consultarPersonaNomPatCompletedEventHandler consultarPersonaNomPatCompleted;
    
    /// <remarks/>
    public event consultarPersonaNroDocCompletedEventHandler consultarPersonaNroDocCompleted;
    
    /// <remarks/>
    public event consultarPersonaNomPatMatCompletedEventHandler consultarPersonaNomPatMatCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PnpAntPolicialconsultarAntecedenteCodPer", RequestNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", ResponseNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("RespuestaAntecedente", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public respuestaAntecedente consultarAntecedenteCodPer([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteUsuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteClave, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string servicioCodigo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteSistema, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteIp, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteMac, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipoDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nroDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string codigoPersona) {
        object[] results = this.Invoke("consultarAntecedenteCodPer", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    codigoPersona});
        return ((respuestaAntecedente)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginconsultarAntecedenteCodPer(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string codigoPersona, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("consultarAntecedenteCodPer", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    codigoPersona}, callback, asyncState);
    }
    
    /// <remarks/>
    public respuestaAntecedente EndconsultarAntecedenteCodPer(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((respuestaAntecedente)(results[0]));
    }
    
    /// <remarks/>
    public void consultarAntecedenteCodPerAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string codigoPersona) {
        this.consultarAntecedenteCodPerAsync(clienteUsuario, clienteClave, servicioCodigo, clienteSistema, clienteIp, clienteMac, tipoDocUserClieFin, nroDocUserClieFin, codigoPersona, null);
    }
    
    /// <remarks/>
    public void consultarAntecedenteCodPerAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string codigoPersona, object userState) {
        if ((this.consultarAntecedenteCodPerOperationCompleted == null)) {
            this.consultarAntecedenteCodPerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarAntecedenteCodPerOperationCompleted);
        }
        this.InvokeAsync("consultarAntecedenteCodPer", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    codigoPersona}, this.consultarAntecedenteCodPerOperationCompleted, userState);
    }
    
    private void OnconsultarAntecedenteCodPerOperationCompleted(object arg) {
        if ((this.consultarAntecedenteCodPerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.consultarAntecedenteCodPerCompleted(this, new consultarAntecedenteCodPerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PnpAntPolicialconsultarPersonaNomPat", RequestNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", ResponseNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("RespuestaPersona", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public respuestaPersona[] consultarPersonaNomPat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteUsuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteClave, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string servicioCodigo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteSistema, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteIp, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteMac, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipoDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nroDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nombre, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paterno) {
        object[] results = this.Invoke("consultarPersonaNomPat", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nombre,
                    paterno});
        return ((respuestaPersona[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginconsultarPersonaNomPat(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nombre, string paterno, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("consultarPersonaNomPat", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nombre,
                    paterno}, callback, asyncState);
    }
    
    /// <remarks/>
    public respuestaPersona[] EndconsultarPersonaNomPat(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((respuestaPersona[])(results[0]));
    }
    
    /// <remarks/>
    public void consultarPersonaNomPatAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nombre, string paterno) {
        this.consultarPersonaNomPatAsync(clienteUsuario, clienteClave, servicioCodigo, clienteSistema, clienteIp, clienteMac, tipoDocUserClieFin, nroDocUserClieFin, nombre, paterno, null);
    }
    
    /// <remarks/>
    public void consultarPersonaNomPatAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nombre, string paterno, object userState) {
        if ((this.consultarPersonaNomPatOperationCompleted == null)) {
            this.consultarPersonaNomPatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarPersonaNomPatOperationCompleted);
        }
        this.InvokeAsync("consultarPersonaNomPat", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nombre,
                    paterno}, this.consultarPersonaNomPatOperationCompleted, userState);
    }
    
    private void OnconsultarPersonaNomPatOperationCompleted(object arg) {
        if ((this.consultarPersonaNomPatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.consultarPersonaNomPatCompleted(this, new consultarPersonaNomPatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PnpAntPolicialconsultarPersonaNroDoc", RequestNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", ResponseNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("RespuestaPersona", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public respuestaPersona[] consultarPersonaNroDoc([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteUsuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteClave, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string servicioCodigo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteSistema, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteIp, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteMac, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipoDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nroDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nroDoc) {
        object[] results = this.Invoke("consultarPersonaNroDoc", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nroDoc});
        return ((respuestaPersona[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginconsultarPersonaNroDoc(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nroDoc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("consultarPersonaNroDoc", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nroDoc}, callback, asyncState);
    }
    
    /// <remarks/>
    public respuestaPersona[] EndconsultarPersonaNroDoc(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((respuestaPersona[])(results[0]));
    }
    
    /// <remarks/>
    public void consultarPersonaNroDocAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nroDoc) {
        this.consultarPersonaNroDocAsync(clienteUsuario, clienteClave, servicioCodigo, clienteSistema, clienteIp, clienteMac, tipoDocUserClieFin, nroDocUserClieFin, nroDoc, null);
    }
    
    /// <remarks/>
    public void consultarPersonaNroDocAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nroDoc, object userState) {
        if ((this.consultarPersonaNroDocOperationCompleted == null)) {
            this.consultarPersonaNroDocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarPersonaNroDocOperationCompleted);
        }
        this.InvokeAsync("consultarPersonaNroDoc", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nroDoc}, this.consultarPersonaNroDocOperationCompleted, userState);
    }
    
    private void OnconsultarPersonaNroDocOperationCompleted(object arg) {
        if ((this.consultarPersonaNroDocCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.consultarPersonaNroDocCompleted(this, new consultarPersonaNroDocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("PnpAntPolicialconsultarPersonaNomPatMat", RequestNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", ResponseNamespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("RespuestaPersona", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public respuestaPersona[] consultarPersonaNomPatMat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteUsuario, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteClave, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string servicioCodigo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteSistema, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteIp, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string clienteMac, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipoDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nroDocUserClieFin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nombre, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string paterno, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string materno) {
        object[] results = this.Invoke("consultarPersonaNomPatMat", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nombre,
                    paterno,
                    materno});
        return ((respuestaPersona[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginconsultarPersonaNomPatMat(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nombre, string paterno, string materno, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("consultarPersonaNomPatMat", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nombre,
                    paterno,
                    materno}, callback, asyncState);
    }
    
    /// <remarks/>
    public respuestaPersona[] EndconsultarPersonaNomPatMat(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((respuestaPersona[])(results[0]));
    }
    
    /// <remarks/>
    public void consultarPersonaNomPatMatAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nombre, string paterno, string materno) {
        this.consultarPersonaNomPatMatAsync(clienteUsuario, clienteClave, servicioCodigo, clienteSistema, clienteIp, clienteMac, tipoDocUserClieFin, nroDocUserClieFin, nombre, paterno, materno, null);
    }
    
    /// <remarks/>
    public void consultarPersonaNomPatMatAsync(string clienteUsuario, string clienteClave, string servicioCodigo, string clienteSistema, string clienteIp, string clienteMac, string tipoDocUserClieFin, string nroDocUserClieFin, string nombre, string paterno, string materno, object userState) {
        if ((this.consultarPersonaNomPatMatOperationCompleted == null)) {
            this.consultarPersonaNomPatMatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconsultarPersonaNomPatMatOperationCompleted);
        }
        this.InvokeAsync("consultarPersonaNomPatMat", new object[] {
                    clienteUsuario,
                    clienteClave,
                    servicioCodigo,
                    clienteSistema,
                    clienteIp,
                    clienteMac,
                    tipoDocUserClieFin,
                    nroDocUserClieFin,
                    nombre,
                    paterno,
                    materno}, this.consultarPersonaNomPatMatOperationCompleted, userState);
    }
    
    private void OnconsultarPersonaNomPatMatOperationCompleted(object arg) {
        if ((this.consultarPersonaNomPatMatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.consultarPersonaNomPatMatCompleted(this, new consultarPersonaNomPatMatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/")]
public partial class respuestaAntecedente {
    
    private string antecedenteField;
    
    private string codigoMensajeField;
    
    private string descripcionMensajeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string antecedente {
        get {
            return this.antecedenteField;
        }
        set {
            this.antecedenteField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string codigoMensaje {
        get {
            return this.codigoMensajeField;
        }
        set {
            this.codigoMensajeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string descripcionMensaje {
        get {
            return this.descripcionMensajeField;
        }
        set {
            this.descripcionMensajeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.flagantecedente.pide.sgws.pnp.gob.pe/")]
public partial class respuestaPersona {
    
    private string nombrecompletoField;
    
    private string apellidoPaternoField;
    
    private string apellidoMaternoField;
    
    private string nombresField;
    
    private string codigoPersonaField;
    
    private string dobleIdentidadField;
    
    private string homonimiaField;
    
    private string lugarNacimientoField;
    
    private string fechaNacimientoField;
    
    private string nombrePadreField;
    
    private string estadoCivilField;
    
    private string nombreMadreField;
    
    private string tipoDocumentoField;
    
    private string nroDocumentoField;
    
    private string sexoField;
    
    private string tallaField;
    
    private string contexturaField;
    
    private string codigoMensajeField;
    
    private string descripcionMensajeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nombrecompleto {
        get {
            return this.nombrecompletoField;
        }
        set {
            this.nombrecompletoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string apellidoPaterno {
        get {
            return this.apellidoPaternoField;
        }
        set {
            this.apellidoPaternoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string apellidoMaterno {
        get {
            return this.apellidoMaternoField;
        }
        set {
            this.apellidoMaternoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nombres {
        get {
            return this.nombresField;
        }
        set {
            this.nombresField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string codigoPersona {
        get {
            return this.codigoPersonaField;
        }
        set {
            this.codigoPersonaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string dobleIdentidad {
        get {
            return this.dobleIdentidadField;
        }
        set {
            this.dobleIdentidadField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string homonimia {
        get {
            return this.homonimiaField;
        }
        set {
            this.homonimiaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string lugarNacimiento {
        get {
            return this.lugarNacimientoField;
        }
        set {
            this.lugarNacimientoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string fechaNacimiento {
        get {
            return this.fechaNacimientoField;
        }
        set {
            this.fechaNacimientoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nombrePadre {
        get {
            return this.nombrePadreField;
        }
        set {
            this.nombrePadreField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string estadoCivil {
        get {
            return this.estadoCivilField;
        }
        set {
            this.estadoCivilField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nombreMadre {
        get {
            return this.nombreMadreField;
        }
        set {
            this.nombreMadreField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string tipoDocumento {
        get {
            return this.tipoDocumentoField;
        }
        set {
            this.tipoDocumentoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string nroDocumento {
        get {
            return this.nroDocumentoField;
        }
        set {
            this.nroDocumentoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string sexo {
        get {
            return this.sexoField;
        }
        set {
            this.sexoField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string talla {
        get {
            return this.tallaField;
        }
        set {
            this.tallaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string contextura {
        get {
            return this.contexturaField;
        }
        set {
            this.contexturaField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string codigoMensaje {
        get {
            return this.codigoMensajeField;
        }
        set {
            this.codigoMensajeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string descripcionMensaje {
        get {
            return this.descripcionMensajeField;
        }
        set {
            this.descripcionMensajeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void consultarAntecedenteCodPerCompletedEventHandler(object sender, consultarAntecedenteCodPerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class consultarAntecedenteCodPerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal consultarAntecedenteCodPerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public respuestaAntecedente Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((respuestaAntecedente)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void consultarPersonaNomPatCompletedEventHandler(object sender, consultarPersonaNomPatCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class consultarPersonaNomPatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal consultarPersonaNomPatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public respuestaPersona[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((respuestaPersona[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void consultarPersonaNroDocCompletedEventHandler(object sender, consultarPersonaNroDocCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class consultarPersonaNroDocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal consultarPersonaNroDocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public respuestaPersona[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((respuestaPersona[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void consultarPersonaNomPatMatCompletedEventHandler(object sender, consultarPersonaNomPatMatCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class consultarPersonaNomPatMatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal consultarPersonaNomPatMatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public respuestaPersona[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((respuestaPersona[])(this.results[0]));
        }
    }
}
